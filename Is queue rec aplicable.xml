<codeTemplate version="3.8.1">
  <id>b110e917-99d3-429d-b98c-d65f189f63bb</id>
  <name>Is queue rec aplicable</name>
  <revision>2</revision>
  <lastModified>
    <time>1602581731396</time>
    <timezone>America/Chicago</timezone>
  </lastModified>
  <contextSet>
    <delegate>
      <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
      <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
      <contextType>DESTINATION_DISPATCHER</contextType>
      <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
      <contextType>SOURCE_RECEIVER</contextType>
    </delegate>
  </contextSet>
  <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
    <type>FUNCTION</type>
    <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function isQueueRecAplicable() {
	var date = java.time.LocalDate.now();
	var dateTime = java.time.LocalDateTime.now();
	logger.debug(&quot;dateTime-----&gt;&quot;+dateTime);
	var day = java.time.DayOfWeek.of(date.get(java.time.temporal.ChronoField.DAY_OF_WEEK));
	var isWeekEnd = (day == java.time.DayOfWeek.SUNDAY);// ||
	
	
	if(isWeekEnd){
		return false
	}else if(day == java.time.DayOfWeek.SATURDAY){
		var saturdayStartTime = java.time.LocalDate.now().atTime(9,0);
		var saturdayEndTime = java.time.LocalDate.now().atTimet(15,0);
		return (dateTime.isAfter(saturdayStartTime) &amp;&amp; dateTime.isBefore(saturdayEndTime));
	}else{
		var weekDayStartTime = java.time.LocalDate.now().atTime(3,30);
		var weekDayEndTime = java.time.LocalDate.now().atTime(18,0);
		logger.debug(&quot;wekdayStart------&gt;&quot;+weekDayStartTime);
		logger.debug(&quot;weekDayEndTime------&gt;&quot;+weekDayEndTime);
		return (dateTime.isAfter(weekDayStartTime) &amp;&amp; dateTime.isBefore(weekDayEndTime));
	}

}</code>
  </properties>
</codeTemplate>