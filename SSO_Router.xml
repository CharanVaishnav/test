<channel version="3.8.1">
  <id>c945b33b-35f2-432b-b140-5b96e4136607</id>
  <nextMetaDataId>165</nextMetaDataId>
  <name>SSO_Router</name>
  <description>The primary message routing channel. Listens on HTTP, logs request/response pairs, routes to handler channels for individual requests.</description>
  <revision>638</revision>
  <sourceConnector version="3.8.1">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.8.1">
      <pluginProperties>
        <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="3.8.1">
  <authType>NONE</authType>
        </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
      </pluginProperties>
      <listenerConnectorProperties version="3.8.1">
        <host>0.0.0.0</host>
        <port>9012</port>
      </listenerConnectorProperties>
      <sourceConnectorProperties version="3.8.1">
        <responseVariable>d3</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>16</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
          <entry>
            <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
            <string>decryption</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
      <xmlBody>false</xmlBody>
      <parseMultipart>true</parseMultipart>
      <includeMetadata>false</includeMetadata>
      <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
      <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
      <responseContentType>${content_type}</responseContentType>
      <responseDataTypeBinary>false</responseDataTypeBinary>
      <responseStatusCode>${responseCode}</responseStatusCode>
      <responseHeaders class="linked-hash-map"/>
      <charset>UTF-8</charset>
      <contextPath>/</contextPath>
      <timeout>30000</timeout>
      <staticResources/>
    </properties>
    <transformer version="3.8.1">
      <elements>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
          <name>Build Generic Out Object</name>
          <sequenceNumber>0</sequenceNumber>
          <enabled>true</enabled>
          <script>// Default error response.
var out = {};
out.success = false;
out.results = [];
out.error = [];

channelMap.put(&quot;out&quot;, out);</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
          <name>Build Generic Metadata Object</name>
          <sequenceNumber>1</sequenceNumber>
          <enabled>true</enabled>
          <script>// Default error response.
var meta = {};
meta.http_code = &quot;500&quot;;
meta.audit_log = {};
meta.stub = null; // adding so it will be present, though not set

meta[&apos;auth&apos;] = sourceMap.get(&apos;headers&apos;).getHeader(&apos;Authorization&apos;);

var content_type = sourceMap.get(&apos;headers&apos;).getHeader(&apos;Content-Type&apos;);
channelMap.put(&quot;content_type&quot;,content_type);
channelMap.put(&quot;responseCode&quot;, meta.http_code); // Default code if all goes wrong.
channelMap.put(&quot;meta&quot;, meta);</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
          <name>Fast-Answer OPTIONS Requests</name>
          <sequenceNumber>2</sequenceNumber>
          <enabled>true</enabled>
          <script>// Part of CORS is that &apos;complex&apos; queries have to be preceeded by an OPTIONs request.
// When those make it to mirth, it&apos;s a waste of time to think about it, just answer with a 204 and empty body.
// Once that happens, the offending browser will then call back with the -real- request using the suitable verb.
if (sourceMap.get(&apos;method&apos;) == &apos;OPTIONS&apos;)
{
	channelMap.put(&quot;responseCode&quot;, &quot;204&quot;); // No Content
	destinationSet.removeAllExcept([&quot;RETURN_VALUE&quot;]);
	var metadata = $(&apos;meta&apos;);
	metadata.http_code = $(&apos;responseCode&apos;)
	return &apos;OPTIONS Request, skip processing&apos;;
}</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
          <name>Build Generic Input Object</name>
          <sequenceNumber>3</sequenceNumber>
          <enabled>true</enabled>
          <script>var input = {};
var out = $(&apos;out&apos;);
var raw = connectorMessage.getRawData(); 
var parsed = null;
try {
	if (raw == &apos;&apos;) { raw = &apos;{}&apos; } 
	
	parsed = JSON.parse(raw);
	logger.debug(&apos;parsed &apos;+JSON.stringify(parsed));
}catch(e){
	logger.error($(&apos;Channel Name&apos;) + &quot; endpoint trapped exception: &quot; + e);

	channelMap.put(&quot;trapped_exception_parse&quot;, e);

	var complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;Parse Incoming Data&apos;, 
		e
	);

	out.error.push(complaint);
}
finally {
channelMap.put(&quot;input&quot;, parsed);
}</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
          <name>Determine Endpoint from URL</name>
          <sequenceNumber>4</sequenceNumber>
          <enabled>true</enabled>
          <script>// Cut up the request url. We&apos;re about to extract parameters from it.
var route_array = $(&apos;contextPath&apos;).split(&quot;/&quot;);
var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var input = $(&apos;input&apos;);

connectorMap.put(&quot;route_array&quot;, route_array); // for debugging.

var accept = sourceMap.get(&apos;headers&apos;).get(&apos;Accept&apos;);
channelMap.put(&quot;accept&quot;, accept);
var json_headers = {
	&apos;accept&apos;: accept
};
logger.debug(&quot;[SSO_Router][Source_Transformer] incoming Accept header: &quot; + accept);

var command = &apos;&apos;; // We&apos;re going to use the message method and url to populate this.
var keep_going = true;
var complaint = null;
try
{
	// Check the meta-data first to see that we have what we need.
	if (keep_going) keep_going = checkMethod();

	// Clean out any pesky uppercase letters in the url.

	for (var i = route_array.length; --i;)
	{
		route_array[i] = route_array[i].toLowerCase();
	}

	// need to do a check for stub on service *before* doing checkService,
	// since checkService is not leting me mutate service
	var service = route_array[3];
	logger.debug(&quot;service name :: &quot;+service);
	
	if (service == undefined)
	{
		complaint = PrepareError(
			&apos;URL_NOT_VALID&apos;,
			route_array.length,
			&apos;Supported parameters: &apos;
		);
		logger.debug(&quot;complaint &quot; + JSON.stringify(complaint));
		meta.http_code = $(&apos;responseCode&apos;); // Set by prepare-error

		out.error.push(complaint);
	}
	// check for stub
	var stubIndex = service.indexOf(&quot;_stub&quot;);

	if (stubIndex &gt; -1)
	{
		//found a stub, so add it to the meta
		var stub = service.substring(stubIndex);
		// chop off the stub from the service
		service = service.replace(stub, &quot;&quot;);
	}

	// Check the parts of the URL to see that they are what we expect.
	if (keep_going) keep_going = checkClient(route_array[1]);

	if (keep_going) keep_going = checkVersion(route_array[2]);
	if (keep_going) keep_going = checkService(service);
	//if (keep_going) keep_going = checkid(route_array[4]);
	// This structure results in strings of the form:
	// READ-trinity-v1-ivr_config
	// These commands are later use by the destination determinator-a-tron.
	var command_array = [
		determineCommandFromMethod(),
		route_array[1],
		route_array[2],
		service
		//route_array[4],
	];

	// Here we have the sets of post endpoints that are valid under each http_method.
	const post_services = [
	     &quot;createcampaignucce&quot;,
	     &quot;createcampaignuccx&quot;,
	     &quot;createcampaignemailsms&quot;,
	     &quot;timerpresets&quot;,
	    	&quot;practicetimer&quot;,
	     &quot;importcontactuccx&quot;,
	     &quot;importcontactucce&quot;,
	     &quot;timerpresetstest&quot;,
	     &quot;practicetimertest&quot;,
	     &quot;diallistbyfile&quot;,
	     &quot;notificationlist&quot;,
	     &quot;campaignstatus&quot;,
	     &quot;createcampaignucce1&quot;,
	     &quot;mediamanagement&quot;,
	     &quot;createmessagetemplate&quot;,
	     &quot;mediatemplate&quot;,
	     &quot;mediamanagementupload&quot;,
	     &quot;uploadaudio&quot;,
	     &quot;globalsettings&quot;,
	     &quot;clonecampaign&quot;,
	     &quot;clonenotificationlist&quot;,
	     &quot;createdatasourcerules&quot;,
	     &quot;createdataidentifier&quot;,
	     &quot;clonemediatemplate&quot;,
	     &quot;createmsgrule&quot;,
	     &quot;errorlog&quot;,
	     &quot;createtemplatelist&quot;,
	     &quot;createvoicemessage&quot;,
	     &quot;createvoiceresponse&quot;,
	     &quot;createdpvcontrols&quot;,
	     &quot;addcustomerdata&quot;,
	     &quot;createvoiceresponsefh&quot;,
	     &quot;createmediamessagefh&quot;,
	     &quot;createmediamessagetemplatefh&quot;,
	     &quot;checklogincredentials&quot;,
	     &quot;registeruser&quot;,
		&quot;createvoicemediamessagefh&quot;,
		&quot;exclusionlist&quot;,
		&quot;fileconfiguration&quot;,
		&quot;createsftpdetails&quot;,
		&quot;updateorderbyresponse&quot;,
		&quot;createcampaignuccxahs&quot;,
		&quot;createcampaignuccxv2&quot;,
		&quot;createdpvcontrolsv2&quot;,
		&quot;createcampaignuccev2&quot;,
		&quot;createcampaignemailsmsv2&quot;,
		&quot;setadvancedrules&quot;
	];
    // Here we have the sets of get endpoints that are valid under each http_method.
	const get_services = [
		&quot;domainvalues&quot;,
          &quot;ucceskillgrouplist&quot;,
          &quot;uccxskillgrouplist&quot;,
          &quot;getcampaignsucce&quot;,
          &quot;getcampaignsuccx&quot;,
          &quot;getcampaignslist&quot;,
          &quot;getcampaignbyid&quot;,
          &quot;gettimerpresetsbyid&quot;,
          &quot;gettimerpresetsbylist&quot;,
          &quot;getpracticetimerbyid&quot;,
          &quot;getpracticetimerbylist&quot;,
          &quot;timerpresetstest&quot;,
          &quot;practicetimertest&quot;,
          &quot;getnotificationlist&quot;,
          &quot;notificationlist&quot;,
          &quot;ucceskillgrouplist1&quot;,
          &quot;uccecampaignslist&quot;,
          &quot;getskillgrouplist&quot;,
          &quot;schedulevariablelist&quot;,
          &quot;mediatemplate&quot;,
          &quot;getmediatemplate&quot;,
          &quot;getmediatemplatebycode&quot;,
          &quot;getmediatemplatebyidtypecode&quot;,
          &quot;messagetypes&quot;,
          &quot;audiofileslist&quot;,
          &quot;smsdefaults&quot;,
          &quot;getmediatemplatebytypeandid&quot;,
          &quot;getvoicetemplate&quot;,
          &quot;globalsettings&quot;,
          &quot;gethl7data&quot;,
          &quot;getdatasourcerules&quot;,
          &quot;getdataidentifier&quot;,
          &quot;getunusedcampaigns&quot;,
          &quot;getmsgrule&quot;,
          &quot;healthcheck&quot;,
          &quot;getsnmpstats&quot;,
          &quot;erroremails&quot;,
          &quot;gettemplatelist&quot;,
          &quot;get_dataidentifier_data&quot;,
          &quot;getvoicemessage&quot;,
          &quot;getdpvcontrols&quot;,
          &quot;searchdpvcontrols&quot;,
          &quot;getcustomerdata&quot;,
          &quot;getvoicemessagefh&quot;,
          &quot;getmediamessagefh&quot;,
          &quot;getsmsmessagetemplatefh&quot;,
          &quot;sendemailforauth&quot;,
          &quot;getuserlist&quot;,
          &quot;verificationtoken&quot;,
          &quot;resendverification&quot;,
          &quot;forgotpassword&quot;,
          &quot;getvoicemessagetemplatesfh&quot;,
          &quot;getvoicemediamessagefh&quot;,
          &quot;getvariablesmedia&quot;,
          &quot;getcontacts&quot;,
          &quot;getdatailfrommrn&quot;,
          &quot;getdatailfrommrngadget&quot;,
          &quot;getsftpdetails&quot;,
          &quot;getfileconfiguration&quot;,
          &quot;callactivity&quot;,
          &quot;getskillgrouplistahs&quot;,
          &quot;getvoicetempdata&quot;,
          &quot;getvoicemaildata&quot;,
          &quot;getmsgcount&quot;,
          &quot;dialhistorylist&quot;,
          &quot;getadvancedrules&quot;
	];
     // Here we have the sets of delete endpoints that are valid under each http_method.
     // As of now we don&apos;t have delete endpoints due to that this is empty
	const delete_services = [
	     &quot;delcampaignbyid&quot;,
	     &quot;deltimerpresetsbyid&quot;,
	     &quot;delpracticetimerbyid&quot;,
	     &quot;deleteuccx&quot;,
	     &quot;timerpresetstest&quot;,
	     &quot;practicetimertest&quot;,
	     &quot;notificationlist&quot;,
	     &quot;mediatemplate&quot;,
	     &quot;deletesmstemplates&quot;
	     
	];

	// Here we have the sets of patch endpoints that are valid under each http_method.
     // As of now we don&apos;t have patch endpoints due to that this is empty
	const patch_services = [
		
		&quot;timerpresetstest&quot;,
		&quot;practicetimertest&quot;
	];
	// Here we have the sets of put endpoints that are valid under each http_method.
     // As of now we don&apos;t have put endpoints due to that this is empty
	const put_services = [
		&quot;updatecampaignbyid&quot;,
	     &quot;timerpresetstest&quot;,
	     &quot;practicetimertest&quot;,
	     &quot;updatetimerpresets&quot;,
		&quot;updatepracticetimer&quot;,
		&quot;updatenotificationlist&quot;,
	     &quot;updatemediatemplate&quot;,
	     &quot;updatesmstemplates&quot;,
	     &quot;updatemediatemplatemsgbyid&quot;,
	     &quot;updateglobalsettings&quot;,
	     &quot;updatedatasourcerules&quot;,
	     &quot;updatedataidentifier&quot;,
	     &quot;updatemsgrule&quot;,
	     &quot;updatetemplatelist&quot;,
	     &quot;updatedpvcontrols&quot;,
	     &quot;updatecustomerdata&quot;,
	     &quot;updatemediamessagefh&quot;,
	     &quot;updateuserrole&quot;,
	     &quot;resetpassword&quot;,
		&quot;updatevoicemediamessagefh&quot;,
		&quot;updatesftpdetails&quot;
	];

	command = command_array.join(&apos;-&apos;);
	logger.debug(&quot;command  &quot; + command);
	meta[&apos;command&apos;] = command;

	// Here we want to check if people are making requests against the correct method.
	var postService  = contains(post_services, service);
	var getService   = contains(get_services, service);
	var delService   = contains(delete_services, service);
	var patchService = contains(patch_services, service);
	var putService   = contains(put_services, service);

	const request_method = sourceMap.get(&apos;method&apos;);

	if (keep_going &amp;&amp; (request_method == &apos;POST&apos;) &amp;&amp; postService == false || keep_going &amp;&amp; (request_method == &apos;GET&apos;) &amp;&amp; getService == false
		|| keep_going &amp;&amp; (request_method == &apos;DELETE&apos;) &amp;&amp; delService == false || keep_going &amp;&amp; (request_method == &apos;PATCH&apos;) &amp;&amp; patchService == false
		|| keep_going &amp;&amp; (request_method == &apos;PUT&apos;) &amp;&amp; putService == false)
	{
		complaint = PrepareError(
			&apos;METHOD_NOT_VALID&apos;,
			request_method,
			&apos;Requested command &apos; + command + &apos; cannot be called with requested method &apos; + request_method
		);

		meta.http_code = $(&apos;responseCode&apos;); // Set by prepare-error
		out.error.push(complaint);
	}

	var myParams = {};
	var queryString = $(&apos;query&apos;);
	var queryItems = queryString.split(&apos;&amp;&apos;);
	
	for (var j = 0; j &lt; queryItems.length; j++) {
		var itemString = queryItems[j];
		var item = itemString.split(&apos;=&apos;);
		var key = item[0];
		var value = item[1];
		myParams[key] = value;
	}

	// check for stub in the found query parameters.
	var stubValue = myParams[&quot;stub&quot;];

	if (stubValue != null)
	{
		//found a stub, so add it to the meta. Most channels will react to it.
		meta.stub = stubValue;
	}

	logger.trace(channelName + &quot; query params: &quot; + JSON.stringify(myParams));
	meta[&apos;parameters&apos;] = myParams;
	meta[&apos;headers&apos;] = json_headers;
}
catch (e)
{
	logger.error(channelName + &quot; endpoint source transformer error: &quot; + e);
	connectorMap.put(&quot;trapped_exception&quot;, e);

	complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		channelName + &apos;_SOURCE_TRANSFORMER&apos;,
		e
	);

	out.error.push(complaint);

}
finally
{
	const data = BuildChannelWriterMessage(input, meta, out);
	channelMap.put(&apos;channel_write_data&apos;, data);
}

function BuildChannelWriterMessage(input, metadata, output)
{
	const result = {};
	result[&apos;input&apos;] = input;
	result[&apos;metadata&apos;] = metadata;
	result[&apos;output&apos;] = output;
	return result;
}

function checkMethod()
{
	const method = sourceMap.get(&apos;method&apos;);
	const supported_methods = [&quot;POST&quot;, &quot;GET&quot;, &quot;DELETE&quot;, &quot;PUT&quot;,&quot;PATCH&quot;];

	const valid = arrayContains(supported_methods, method);

	if (valid === false)
	{
		//&apos;METHOD_NOT_ALLOWED&apos;,
		complaint = PrepareError(
			&apos;METHOD_NOT_VALID&apos;,
			method,
			&apos;Supported methods: &apos; + supported_methods
		);

		meta.http_code = $(&apos;responseCode&apos;); // Set by prepare-error
		out.error.push(complaint);
	}
	// and output if we liked what we saw.
	connectorMap.put(&apos;method_valid&apos;, valid);

	return valid;
}

function determineCommandFromMethod()
{
	const method = sourceMap.get(&apos;method&apos;);
	meta[&apos;method&apos;] = method;

	var result;

	if (method == &apos;GET&apos;)
	{
		result = &apos;READ&apos;;

	}
	// Several different flavors of write all go in the same bin for right now.
	// The endpoint in question is supposed to do its own checking if it 
	// supports multiple &apos;WRITE&apos; type methods. Such endpoints probably handle &apos;DELETE&apos; as well.
	else if (method == &apos;POST&apos; || method == &apos;PATCH&apos; || method == &apos;PUT&apos;)
	{
		result = &apos;WRITE&apos;;
	}
	else if (method == &apos;DELETE&apos;)
	{
		result = &apos;DELETE&apos;;
	}
	else
	{
		result = &apos;ERROR&apos;;
		logger.error(channelName + &apos;: Failed to determine command from method &apos; + method);
	}

	// Log what we found at trace because it would be far too noisy for debug logging.
	logger.trace(channelName + &apos; [Source transformer] determineCommandFromMethod() found &apos; + method + &apos; and decided on &apos; + result);

	return result;
}

function checkClient(client)
{
	connectorMap.put(&apos;client&apos;, client);
	var supported_clients = [&quot;agenta&quot;];
	var valid = arrayContains(supported_clients, client);

	// API Target. If correct, no operation.
	if (valid === false)
	{
		complaint = PrepareError(
			&apos;URL_NOT_VALID&apos;,
			client,
			&apos;Supported parameters: &apos; + supported_clients
		);
		meta.http_code = $(&apos;responseCode&apos;); // Set by prepare-error
		out.error.push(complaint);
	}
	// and output if we liked what we saw.
	connectorMap.put(&apos;client_valid&apos;, valid);
	return valid;
}

function checkVersion(version)
{
	connectorMap.put(&apos;version&apos;, version);
	var supported_versions = [&quot;sso&quot;];
	var valid = arrayContains(supported_versions, version);
	// API Target. If correct, no operation. || route_array.length != 5
	if (valid === false)
	{
		complaint = PrepareError(
			&apos;URL_NOT_VALID&apos;,
			version,
			&apos;Supported parameters: &apos; + supported_versions
		);

		meta.http_code = $(&apos;responseCode&apos;); // Set by prepare-error
		out.error.push(complaint);
	}
	// and output if we liked what we saw.
	connectorMap.put(&apos;version_valid&apos;, valid);
	return valid;
}

function checkService(service)
{
	connectorMap.put(&apos;service&apos;, service);

	const supported_services = [
		&quot;domainvalues&quot;,
		&quot;createcampaignucce&quot;,
		&quot;createcampaignuccx&quot;,
		&quot;createcampaignemailsms&quot;,
	     &quot;ucceskillgrouplist&quot;,
	     &quot;uccxskillgrouplist&quot;,
	     &quot;getcampaignsucce&quot;,
	     &quot;getcampaignsuccx&quot;,
	     &quot;getcampaignslist&quot;,
	     &quot;getcampaignbyid&quot;,
	     &quot;timerpresets&quot;,
	     &quot;delcampaignbyid&quot;,
	     &quot;gettimerpresetsbyid&quot;,
	     &quot;gettimerpresetsbylist&quot;,
	     &quot;updatetimerpresets&quot;,
	     &quot;deltimerpresetsbyid&quot;,
	     &quot;practicetimer&quot;,
	     &quot;updatepracticetimer&quot;,
	     &quot;getpracticetimerbyid&quot;,
	     &quot;getpracticetimerbylist&quot;,
	     &quot;delpracticetimerbyid&quot;,
	     &quot;updatecampaignbyid&quot;,
	     &quot;importcontactuccx&quot;,
	     &quot;importcontactucce&quot;,
	     &quot;deleteuccx&quot;,
	     &quot;timerpresetstest&quot;,
	     &quot;practicetimertest&quot;,
	     &quot;diallistbyfile&quot;,
	     &quot;notificationlist&quot;,
	     &quot;updatenotificationlist&quot;,
	     &quot;getnotificationlist&quot;,
	     &quot;ucceskillgrouplist1&quot;,
	     &quot;campaignstatus&quot;,
	     &quot;uccecampaignslist&quot;,
	     &quot;getskillgrouplist&quot;,
	     &quot;createcampaignucce1&quot;,
	     &quot;mediamanagement&quot;,
	     &quot;schedulevariablelist&quot;,
	     &quot;createmessagetemplate&quot;,
	     &quot;mediatemplate&quot;,
	     &quot;updatemediatemplate&quot;,
	     &quot;mediamanagementupload&quot;,
	     &quot;deletesmstemplates&quot;,
	     &quot;updatesmstemplates&quot;,
	     &quot;smsdefaults&quot;,
	     &quot;getmediatemplate&quot;,
	     &quot;getmediatemplatebycode&quot;,
	     &quot;messagetypes&quot;,
	     &quot;uploadaudio&quot;,
	     &quot;audiofileslist&quot;,
	     &quot;getmediatemplatebytypeandid&quot;,
	     &quot;updatemediatemplatemsgbyid&quot;,
	     &quot;getmediatemplatebyidtypecode&quot;,
	     &quot;getvoicetemplate&quot;,
	     &quot;globalsettings&quot;,
	     &quot;updateglobalsettings&quot;,
	     &quot;clonecampaign&quot;,
	     &quot;clonenotificationlist&quot;,
	     &quot;gethl7data&quot;,
	     &quot;createdatasourcerules&quot;,
	     &quot;updatedatasourcerules&quot;,
	     &quot;getdatasourcerules&quot;,
	     &quot;createdataidentifier&quot;,
	     &quot;updatedataidentifier&quot;,
	     &quot;getdataidentifier&quot;,
	     &quot;getunusedcampaigns&quot;,
	     &quot;clonemediatemplate&quot;,
	     &quot;createmsgrule&quot;,
	     &quot;updatemsgrule&quot;,
	     &quot;getmsgrule&quot;,
	     &quot;healthcheck&quot;,
	     &quot;errorlog&quot;,
	     &quot;getsnmpstats&quot;,
          &quot;erroremails&quot;,
          &quot;createtemplatelist&quot;,
          &quot;updatetemplatelist&quot;,
          &quot;gettemplatelist&quot;,
          &quot;get_dataidentifier_data&quot;,
          &quot;createvoicemessage&quot;,
          &quot;getvoicemessage&quot;,
          &quot;createvoiceresponse&quot;,
          &quot;createdpvcontrols&quot;,
          &quot;updatedpvcontrols&quot;,
          &quot;getdpvcontrols&quot;,
          &quot;searchdpvcontrols&quot;,
          &quot;getcustomerdata&quot;,
          &quot;updatecustomerdata&quot;,
          &quot;addcustomerdata&quot;,
          &quot;getvoicemessagefh&quot;,
          &quot;createvoiceresponsefh&quot;,
          &quot;createmediamessagefh&quot;,
          &quot;updatemediamessagefh&quot;,
          &quot;getmediamessagefh&quot;,
          &quot;getsmsmessagetemplatefh&quot;,
          &quot;createmediamessagetemplatefh&quot;,
          &quot;sendemailforauth&quot;,
          &quot;checklogincredentials&quot;,
          &quot;registeruser&quot;,
          &quot;getuserlist&quot;,
          &quot;verificationtoken&quot;,
          &quot;resendverification&quot;,
          &quot;updateuserrole&quot;,
          &quot;forgotpassword&quot;,
          &quot;resetpassword&quot;,
          &quot;getvoicemessagetemplatesfh&quot;,
          &quot;getvoicemediamessagefh&quot;,
		&quot;updatevoicemediamessagefh&quot;,
		&quot;createvoicemediamessagefh&quot;,
		&quot;getvariablesmedia&quot;,
		&quot;getcontacts&quot;,
		&quot;exclusionlist&quot;,
		&quot;fileconfiguration&quot;,
          &quot;getdatailfrommrn&quot;,
          &quot;getdatailfrommrngadget&quot;,
          &quot;getsftpdetails&quot;,
          &quot;createsftpdetails&quot;,
          &quot;updatesftpdetails&quot;,
          &quot;getfileconfiguration&quot;,
          &quot;callactivity&quot;,
          &quot;updateorderbyresponse&quot;,
          &quot;createcampaignuccxahs&quot;,
          &quot;createcampaignuccxv2&quot;,
          &quot;createdpvcontrolsv2&quot;,
          &quot;getskillgrouplistahs&quot;,
          &quot;getvoicetempdata&quot;,
          &quot;getvoicemaildata&quot;,
          &quot;getmsgcount&quot;,&#xd;          &quot;dialhistorylist&quot;,
          &quot;createcampaignuccev2&quot;,
          &quot;createcampaignemailsmsv2&quot;,
          &quot;setadvancedrules&quot;,
          &quot;getadvancedrules&quot;
	];

	var valid = arrayContains(supported_services, service);
	// API Target. If correct, no operation.
	if (valid === false)
	{
		complaint = PrepareError(
			&apos;URL_NOT_VALID&apos;,
			service,
			&apos;Supported parameters: &apos; + supported_services
		);

		meta.http_code = $(&apos;responseCode&apos;); // Set by prepare-error
		out.error.push(complaint);
	}
	// and output if we liked what we saw.
	connectorMap.put(&apos;service_valid&apos;, valid);
	return valid;
}</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
          <name>Determine Destination Set</name>
          <sequenceNumber>5</sequenceNumber>
          <enabled>true</enabled>
          <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
const is_healthcheck = meta.command.endsWith(&apos;healthcheck&apos;); // Healthchecks get a truncated logic set.
const skip_authentication = ($(&apos;EPIC_SKIP_AUTHENTICATION&apos;) == &quot;TRUE&quot;); // Only bypass auth for a string TRUE, all caps.

channelMap.put(&apos;destination_command&apos;, meta.command);

if (out.error.length &gt; 0)
{
	// if we had any errors, don&apos;t try to process.
	const error_message_set = [&quot;LOG_REQUEST_IN&quot;, &quot;RETURN_VALUE&quot;]
	destinationSet.removeAllExcept(error_message_set);
}
else if (is_healthcheck) {
	logger.trace(&apos;[SSO_Router][SOURCE] using healthcheck destination set.&apos;);
	const healthcheck_message_set = [meta.command, &quot;RETURN_VALUE&quot;]; // note lack of DB logging.
	destinationSet.removeAllExcept(healthcheck_message_set);
}
else if (skip_authentication) {
	logger.trace(&apos;[SSO_Router][SOURCE] using unauthenticated standard destination set.&apos;);
	const skip_auth_set = [
		meta.command,
		&quot;RETURN_VALUE&quot;,
		&quot;LOG_REQUEST_IN&quot;,
		&quot;LOG_REQUEST_OUT&quot;,
	];
	destinationSet.removeAllExcept(skip_auth_set);
	meta[&apos;request_approved&apos;] = true; // Force-approve everyone.
}
else {
	logger.trace(&apos;[SSO_Router][SOURCE] using standard destination set.&apos;);
	const process_message_set = [
		meta.command,
		&quot;RETURN_VALUE&quot;,
		&quot;LOG_REQUEST_IN&quot;,
		&quot;LOG_REQUEST_OUT&quot;,
		&quot;AUTHENTICATE_USER&quot;,
	];
	destinationSet.removeAllExcept(process_message_set);
}

out[&apos;command&apos;] = meta.command; // for easier debugging</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
      </elements>
      <inboundTemplate encoding="base64"></inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>RAW</inboundDataType>
      <outboundDataType>RAW</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
        <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
        <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.8.1">
      <elements/>
    </filter>
    <transportName>HTTP Listener</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.8.1">
      <metaDataId>21</metaDataId>
      <name>LOG_REQUEST_IN</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);

var dbConn = null;
try 
{
	
	dbConn = getdbConnection();
	logger.debug(&apos;dbConn [SSORouter]: &apos;+dbConn);
	var audit_log = performQuery(dbConn);
	if (Array.isArray(audit_log)) { audit_log = audit_log[0]; }

	channelMap.put(&apos;audit_log&apos;, audit_log); // Will get mutated by later steps

	meta[&apos;audit_log&apos;] = audit_log;
}
catch (e)
{
	logger.error(channelName+ &quot; endpoint LOG_REQUEST_IN trapped exception: &quot; + e);

	connectorMap.put(&quot;trapped_exception&quot;, e);

	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION_SQL&apos;,
		&apos;insert into audit_log&apos;, 
		e
	);

	out.error.push(complaint);
}
finally
{
	if (dbConn) { dbConn.close(); }
}
logger.debug(&apos;meta &apos;+$(&apos;meta&apos;));
return JSON.stringify($(&apos;meta&apos;)); // As string for logging

function performQuery(dbConn)
{
	const query = buildInsertQuery();
	connectorMap.put(&apos;sql_query&apos;, query); // For debugging
	
	const params = buildParameterArray();
	connectorMap.put(&apos;sql_params&apos;, params); // For debugging

	const result = dbConn.executeCachedQuery(query, params);
	logger.debug(&apos;result [SSORouter]: &apos;+result);
	const json_results = convertSqlResultSetToJson(result);
     logger.debug(&apos;json_results [SSORouter]: &apos;+JSON.stringify(json_results));
	if( json_results.length === 0)
	{
		out.info = &quot;No Results Found&quot;;
	}

	return json_results;
}

function buildInsertQuery()
{
	// List out all the fields we&apos;re going to pump data to.
	// The plan here is we make sure to always log everything, even the garbage.
	// Destination endpoints are responsible for followup logging.
	const column_list = [
		&apos;raw_request&apos;,
		&apos;remote_ip&apos;,
		&apos;route_url&apos;,
		&apos;http_method&apos;,
	];
	
	return &apos;INSERT INTO audit_trail.request_log(&apos; +
		column_list.join(&apos;,&apos;) + // Build dynamically because development will make this set vary a lot. Also to aid copy-pasting.
	&apos;) VALUES (&apos; +
		buildQuestionMarkList(column_list.length) + // Build dynamically because development will make the length vary a lot. Also to aid copy-pasting.
	&apos;) RETURNING uid ;&apos; ;

}

function buildParameterArray()
{
	// This function is going have to know about the innards of the query builder function,
	// at least in terms of knowning what to push and in what order.
	var params = [];
	params.push($(&apos;raw_data&apos;));  
	params.push(sourceMap.get(&apos;remoteAddress&apos;));
	params.push(sourceMap.get(&apos;url&apos;));
	params.push(sourceMap.get(&apos;method&apos;));
	
	return params;
}

function buildQuestionMarkList( length )
{
	if (length &lt; 0) throw &quot;Length must be non-negative&quot;;
	const marks = [];
	// clever loop optimization discussed here: https://stackoverflow.com/questions/1340589/are-loops-really-faster-in-reverse
	// As i decrements, it eventually hits zero, which gets read by the evaluator and sees it as loosely equal to &apos;false&apos;, halting the loop there.
	for (var i = length; i--;)
	{
		marks.push(&apos;?&apos;)
	}
	return marks.join(&apos;,&apos;);
}</script>
      </properties>
      <transformer version="3.8.1">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>false</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>22</metaDataId>
      <name>AUTHENTICATE_USER</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);

var dbConn = null;

var requestApproved = false;
var myError = null;
try
{
	logger.trace(&apos;[SSO_Router][AUTHENTICATE_USER] starting user authentication&apos;);

	dbConn = getdbConnection();

	var authToken = determineAuthToken();
	logger.debug(&apos;authToken &apos;+JSON.stringify(authToken));
	connectorMap.put(&apos;authToken&apos;, authToken);

	if (authToken != null)
	{	
		var action = determineRequestedAction();
		logger.debug(&apos;action &apos;+action);
		if (action != null)
		{
			var paramList = [				
				authToken.password,
				action,
				authToken.userName,
				authToken.password,
				authToken.password
			];
		logger.debug(&apos;paramList &apos;+paramList);
			var userQuery = getUserQuery();

			connectorMap.put(&apos;user_query&apos;, userQuery);

			// do not put the password into the connector map :P
			connectorMap.put(&apos;user_name&apos;, authToken.userName);
			connectorMap.put(&apos;user_action&apos;, action);
		
			var userQueryResult = dbConn.executeCachedQuery(userQuery, paramList);
               logger.debug(&apos;userQueryResult &apos;+userQueryResult);
			// connectorMap.put(&apos;user_query_raw_results&apos;, userQueryResult); // Trying to log the db result object sometimes makes the message logs corrupt.
		
			var user = processUserQueryResult(userQueryResult);
			logger.debug(&apos;user &apos;+JSON.stringify(user));
			connectorMap.put(&apos;user_query_results&apos;, user);
			meta[&apos;temp_login&apos;] = user[&apos;temp_login&apos;];
		
			if (user.user_id != null)
			{
				// we have a user, so save the ID for later
				meta[&apos;user_id&apos;] = user.user_id;
	
				if (user.action_id != null)
				{
					// we have the action, so save the ID for later
					meta[&apos;action_id&apos;] = user.action_id;
					
					requestApproved = user.allow;

					// the role may have the permission, but said permission may explicitly be
					// set to be denied.  If that is the case, treat it the same as if the user
					// did not have a role with the permission
					if (requestApproved != true)
					{
						myError = PrepareError(
							&apos;PERMISSIONS_VIOLATION&apos;,
							&apos;&apos;,
							&apos;Requested Action: &apos; + action
						);
	
						out.error.push(myError);
					}
				}
				else
				{
					myError = PrepareError(
						&apos;PERMISSIONS_VIOLATION&apos;,
						&apos;&apos;,
						&apos;Requested Action: &apos; + action
					);

					out.error.push(myError);
				}
			}
			else
			{
				myError = PrepareError(
					&apos;CREDENTIALS_NOT_VALID&apos;,
					&apos;&apos;,
					&apos;User Name: &apos; + authToken.userName
				);

				out.error.push(myError);
			}
		}
		else
		{
			logger.warn(&apos;[SSO_Router][AUTHENTICATE_USER] Cound not determine requested action&apos;);
			
			myError = PrepareError(
				&apos;CREDENTIALS_NOT_VALID&apos;,
				&apos;Could not determine requested action.&apos;,
				&apos;Could not determine requested action.&apos;
			);
			out.error.push(myError);
		}
	}
	else
	{
		logger.warn(&apos;[SSO_Router][AUTHENTICATE_USER] Could not determine authentication token&apos;);
		myError = PrepareError(
			&apos;CREDENTIALS_NOT_VALID&apos;,
			&apos;Could not determine authentication token. Do you have an Authorization header in Basic format?&apos;,
			&apos;Could not determine authentication token. Do you have an Authorization header in Basic format?&apos;
		);
		out.error.push(myError);
	}

	// was previously going to alter destinationSet, but that is apparently not available with in the destinations,
	// only in the source filters/transformers/etc.  Instead, need to set the request_approved flag in meta and have each
	// destination have a filter that checks that flag
	meta[&apos;request_approved&apos;] = requestApproved;
     logger.debug(&apos;meta last &apos;+JSON.stringify(meta));
	return JSON.stringify(meta); // log the meta for easier tracing of authentication protocol.

}
catch (e)
{
	logger.error(channelName + &quot; endpoint source transformer error: &quot; + e);

	myError = PrepareError(
		&quot;TRAPPED_EXCEPTION&quot;,
		channelName + &quot; endpoint source transformer&quot;,
		e
	);

	out.error.push(myError);

	connectorMap.put(&quot;trapped_exception&quot;, e);

	// if we get an exception while trying to authenticate the user, then the authentication is considered to have failed
	// thus, we need to set the request_approved flag to false 
	meta[&apos;request_approved&apos;] = false;	
}
finally
{
	if (dbConn != null)
	{
		dbConn.close();
	}

	logger.debug(&apos;[SSO_Router][AUTHENTICATE_USER] response code: &apos; + $(&apos;responseCode&apos;));
	meta[&apos;http_code&apos;] = $(&apos;responseCode&apos;);
}

function determineAuthToken()
{
	logger.trace(&apos;[SSO_Router][AUTHENTICATE_USER] determining authentication token&apos;)
	var result = null;
	var rawAuth = meta[&apos;auth&apos;];
     logger.debug(&apos;rawAuth &apos;+rawAuth);
	if (rawAuth != null)
	{
		var authParts = rawAuth.split(&apos; &apos;);

		if (authParts.length &gt; 1)
		{
			var encoded = authParts[1];
		
			var Base64 = GetBase64Encoder();
			
			var decoded = Base64.decode(encoded);

			authParts = decoded.split(&apos;:&apos;);

			if (authParts.length &gt; 1)
			{
				result = {};
				result.userName = authParts[0];
				result.password = authParts[1];

				// purposefully only logging user name, but not password
				logger.debug(&apos;[SSO_Router][AUTHENTICATE_USER] Auth token successfully decoded.  User name: &apos; + result.userName);
			}
			else
			{
				logger.warn(&apos;[SSO_Router][AUTHENTICATE_USER] Invalid format for decoded auth token: &quot;&apos; + decoded + &apos;&quot;&apos;);
			}
		}
		else
		{
			logger.warn(&apos;[SSO_Router][AUTHENTICATE_USER] Invalid format for raw auth token: &apos; + rawAuth);
		}
	}
	else
	{
		logger.warn(&apos;[SSO_Router][AUTHENTICATE_USER] Missing raw auth from meta&apos;);
	}

	return result;
}

function getUserQuery()
{
	logger.trace(&apos;[SSO_Router][AUTHENTICATE_USER] getting user query&apos;);
	
	var query = &quot;select distinct &quot; +
				&quot;u.uid as user_id, &quot; +
				&quot;case when (p.temp_password is not null &quot; +
						&quot;and p.temp_password = crypt(?, p.temp_password) &quot; +
						&quot;and p.temp_password_expiration &gt; NOW()::timestamp) &quot;+
					&quot;then true &quot; +
					&quot;else false &quot; +
				&quot;end as temp_login, &quot; + 
				&quot;perm.permission_id, &quot; +
				&quot;perm.allow, &quot; +
				&quot;perm.action_id &quot; +
			&quot;from auth.users u &quot; +
			&quot;inner join auth.passwords p &quot; +
				&quot;on u.uid = p.user_id &quot; +
			&quot;left join auth.user_role_business_unit_matrix urbum &quot; +
				&quot;on u.uid = urbum.user_id &quot; +
			&quot;left join ( &quot; +
				&quot;select &quot; +
					&quot;r.uid as role_id, &quot; +
					&quot;p.uid as permission_id, &quot; +
					&quot;p.allow, &quot; +
					&quot;a.uid as action_id &quot; +
				&quot;from auth.actions a &quot; +
				&quot;inner join auth.permissions p &quot; +
					&quot;on a.uid = p.action_id &quot; +
				&quot;inner join auth.roles r &quot; +
					&quot;on p.role_id = r.uid &quot; +
				&quot;where a.name = ? &quot; +
			&quot;) perm &quot; +
				&quot;on urbum.role_id = perm.role_id &quot; +
			&quot;where lower(u.name) = lower(?) &quot; +
				&quot;and u.is_active = true &quot; +
				&quot;and ( p.password = crypt(?, p.password) &quot; +
					&quot;or (p.temp_password is not null &quot; +
						&quot;and p.temp_password = crypt(?, p.temp_password) &quot; +
						&quot;and p.temp_password_expiration &gt; NOW()::timestamp) &quot; +
					&quot;); &quot;;

	logger.trace(&apos;[SSO_Router][AUTHENTICATE_USER] user query: &apos; + query);
	return query;
}

function processUserQueryResult(queryResultSet)
{
	logger.trace(&apos;[SSO_Router][AUTHENTICATE_USER] processing user query result&apos;);
	var result = {};

	//var disallow = false;
	queryResultSet.beforeFirst();

	// we might get multiple rows if the user has multiple roles however, not all roles will necessarily 
	// have the specific permission we care about right now.  We need at leat one row to have the permission
	// to let the user do the action, but if *any* role with the permission has the allow set to false, then
	// that will override all other roles
	while (queryResultSet.next())
	{
		// always capture the user id, so we can distinguish between no role/permission and invalid credentials
		result.user_id = queryResultSet.getString(&quot;user_id&quot;);
		result.temp_login = queryResultSet.getBoolean(&quot;temp_login&quot;);

		var actionId = queryResultSet.getString(&quot;action_id&quot;);

		if (actionId != null)
		{
			
			result.action_id = actionId;
			result.permission_id = queryResultSet.getString(&quot;permission_id&quot;);
			result.allow = queryResultSet.getBoolean(&quot;allow&quot;);

			if (result.allow != true)
			{
				result.allow = false;
				break;
			}
	
		}
	}
	
	if (result.user_id == null)
	{
		logger.debug(&apos;[SSO_Router][AUTHENTICATE_USER] No role found - user name / pw mismatch&apos;);
	}
	else
	{		
		logger.trace(&apos;[SSO_Router][AUTHENTICATE_USER] User query results: &apos; + JSON.stringify(result));
	}

	return result;
}

function determineRequestedAction()
{
	logger.trace(&apos;[SSO_Router][AUTHENTICATE_USER] determining requested action&apos;);
	
	var result = null;
	
	var command = meta[&apos;command&apos;];
	var method = meta[&apos;method&apos;];

	if (command != null &amp;&amp; method != null)
	{
		var commandPieces = command.split(&apos;-&apos;);
		if (commandPieces.length &gt; 3)
		{
			var endPoint = commandPieces[3];

			if (endPoint != null)
			{
				// this map is defined in the transformer
				var eam = $(&apos;endpoint_action_map&apos;);
				var endPointOps = eam[endPoint];
				if (endPointOps != null)
				{
					var op = getOpFromMethod(method);
					connectorMap.put(&apos;op&apos;,op);
					if (op != null)
					{
						result = endPointOps[op];
						logger.debug(&apos;[SSO_Router][AUTHENTICATE_USER] Requested Action: &apos; + result +
							&apos; based on endpoint &apos; + op + &apos;-&apos; + endPoint);
					}
					else
					{
						logger.warn(&apos;[SSO_Router][AUTHENTICATE_USER] Unsupported method: &apos; + method);
					}
				}
				else
				{
					logger.warn(&apos;[SSO_Router][AUTHENTICATE_USER] End point not found in map: &apos; + endPoint);
				}
			}
			else
			{
				logger.warn(&apos;[SSO_Router][AUTHENTICATE_USER] Missing end point from command: &apos; + command);
			}
		}
		else
		{
			logger.warn(&apos;[SSO_Router][AUTHENTICATE_USER] Invalid format on command: &apos; + command);
		}
	}
	else
	{
		logger.warn(&apos;[SSO_Router][AUTHENTICATE_USER] Missing command and/or method from meta&apos;);
	}

	return result;
}

function getOpFromMethod(method)
{
	logger.trace(&apos;[SSO_Router][AUTHENTICATE_USER] getting operation from method: &apos; + method);
	var result = null;

	if (method == &quot;GET&quot;)
	{
		result = &quot;READ&quot;;
	}
	else if (method == &quot;POST&quot;)
	{
		result = &quot;WRITE&quot;;
	}
	else if (method == &quot;PUT&quot;)
	{
		result = &quot;UPDATE&quot;;
	}
	else if (method == &quot;DELETE&quot;)
	{
		result = &quot;DELETE&quot;;
	}

	logger.trace(&apos;[SSO_Router][AUTHENTICATE_USER] op: &apos; + result);
	return result;
}</script>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>// Note these will need to match with the entries in the DB table auth.actions ;
const endpoint_action_map = {
  &quot;domainvalues&quot;: {
  	&apos;READ&apos; : &apos;DomainValues&apos;
  },
  &quot;createcampaignucce&quot;: {
  	&apos;WRITE&apos; : &apos;CreateCampaignUCCE&apos;
  },
  &quot;createcampaignuccx&quot;: {
  	&apos;WRITE&apos; : &apos;CreateCampaignUCCX&apos;
  },
  &quot;createcampaignemailsms&quot;: {
    &apos;WRITE&apos;: &apos;CreateCampaignEmail/SMS&apos;
  },
  &quot;getskillgrouplist&quot;: {
    &apos;READ&apos;: &apos;GetSkillGroupList&apos;
  },
  &quot;getcampaignslist&quot;: {
    &apos;READ&apos;: &apos;GetCampaignsList&apos;
  },
  &quot;getcampaignsucce&quot;: {
    &apos;READ&apos;: &apos;GetCampaignsUCCE&apos;
  },
  &quot;getcampaignsuccx&quot;: {
    &apos;READ&apos;: &apos;GetCampaignsUCCX&apos;
  },
  &quot;getcampaignbyid&quot;: {
  	&apos;READ&apos;: &apos;GetCampaignById&apos;
  },
  &quot;delcampaignbyid&quot;: {
    &apos;DELETE&apos;: &apos;DelCampaignById&apos;
  },
  &quot;updatecampaignbyid&quot;: {
    &apos;UPDATE&apos;: &apos;UpdateCampaignById&apos;
  },
  &quot;timerpresets&quot;: {
    &apos;WRITE&apos;: &apos;CreateTimerPresets&apos;
  },
  &quot;updatetimerpresets&quot;: {
    &apos;UPDATE&apos;: &apos;UpdateTimerPresets&apos;
  },
  &quot;gettimerpresetsbyid&quot;: {
    &apos;READ&apos;: &apos;GetTimerPresetsById&apos;
  },
  &quot;gettimerpresetsbylist&quot;: {
    &apos;READ&apos;: &apos;GetTimerPresetsByList&apos;
  },
  &quot;deltimerpresetsbyid&quot;: {
    &apos;DELETE&apos;: &apos;DelTimerPresetsById&apos;
  },
  &quot;practicetimer&quot;: {
    &apos;WRITE&apos;: &apos;CreatePracticeTimer&apos;
  },
  &quot;updatepracticetimer&quot;: {
    &apos;UPDATE&apos;: &apos;UpdatePracticeTimer&apos;
  	
  },
  &quot;getpracticetimerbylist&quot;: {
  	&apos;READ&apos;: &apos;GetPracticeTimerByList&apos;
  },
  &quot;getpracticetimerbyid&quot;:
  {
  	&quot;READ&quot;: &quot;GetPracticetimerById&quot;
  },
  &quot;delpracticetimerbyid&quot;: {
    &apos;DELETE&apos;: &apos;DelPracticeTimerById&apos;
  },
  &quot;notificationlist&quot;: {
    &apos;WRITE&apos;: &apos;CreateNotificationList&apos;,
    &apos;READ&apos;: &apos;GetNotificationsList&apos;,
    &apos;DELETE&apos;: &apos;DeleteNotificationList&apos;
  },
  &quot;updatenotificationlist&quot;: {
    &apos;UPDATE&apos;: &apos;UpdateNotificationList&apos;
  	
  },
  &quot;getnotificationlist&quot;: {
  	&apos;READ&apos;: &apos;GetNotificationList&apos;
  },
  &quot;campaignstatus&quot;:
  {
  	&quot;WRITE&quot;: &quot;ChangeCampaignStatus&quot;
  },
  &quot;schedulevariablelist&quot;: {
    &apos;READ&apos;: &apos;GetScheduleVariables&apos;
  },
  &quot;smstemplates&quot;: {
    &apos;WRITE&apos;: &apos;CreateSMSTemplates&apos;
  	
  },
  &quot;updatesmstemplates&quot;: {
  	&apos;UPDATE&apos;: &apos;UpdateSMSTemplates&apos;
  },
  &quot;deletesmstemplates&quot;:
  {
  	&quot;DELETE&quot;: &quot;DelSMSTemplates&quot;
  },
  &quot;createmediatemplate&quot;: {
    &apos;WRITE&apos;: &apos;CreateMediaTemplate&apos;
  },
  &quot;updatemediatemplate&quot; : {
  	&apos;UPDATE&apos;: &apos;UpdateMediaTemplates&apos;
  },
  &quot;getmediatemplate&quot;: {
    &apos;READ&apos;: &apos;GetMediaTemplateById&apos;
  },
  &quot;getmediatemplatebycode&quot;: {
    &apos;READ&apos;: &apos;GetMediaTemplateByCode&apos;
  },
  &quot;getmediatemplatebytypeandid&quot;: {
    &apos;READ&apos;: &apos;GetMediaTemplateByTypeAndId&apos;
  },
  &quot;updatemediatemplatemsgbyid&quot;: {
    &apos;UPDATE&apos;: &apos;UpdateMediaTemplateMSGById&apos;
  },
  &quot;messagetypes&quot;: {
    &apos;READ&apos;: &apos;GetMessageByType&apos;
  },
  &quot;smsdefaults&quot;: {
    &apos;READ&apos;: &apos;GetSMSDefaults&apos;
  },
  &quot;uploadaudio&quot;: {
    &apos;READ&apos;: &apos;CreateUploadAudio&apos;
  },
  &quot;audiofilelist&quot;: {
    &apos;READ&apos;: &apos;GetAudiofileList&apos;
  },
  &quot;getvoicetemplate&quot;: {
    &apos;READ&apos;: &apos;GetVoiceTemplate&apos;
  },
  &quot;globalsettings&quot;: {
    &apos;WRITE&apos;: &apos;CreateGlobalSettings&apos;,
    &apos;READ&apos;: &apos;GetGlobalSettings&apos;
  },
  &quot;clonecampaign&quot;: {
    &apos;WRITE&apos;: &apos;CloneCampaign&apos;
  },
  &quot;clonenotificationlist&quot;: {
    &apos;WRITE&apos;: &apos;CloneNotificationList&apos;
  },
  &quot;clonemediatemplate&quot;: {
    &apos;WRITE&apos;: &apos;CloneMediaTemplate&apos;
  },
  &quot;gethl7data&quot;: {
    &apos;READ&apos;: &apos;GetHL7Data&apos;
  },
  &quot;createdatasourcerules&quot;: {
    &apos;WRITE&apos;: &apos;CreateDataSourceRules&apos;
  },
  &quot;updatedatasourcerules&quot;: {
    &apos;UPDATE&apos;: &apos;UpdateDataSourceRules&apos;
  },
  &quot;getdatasourcerules&quot;: {
    &apos;READ&apos;: &apos;GetDataSourceRules&apos;
  },
  &quot;createdataidentifier&quot;: {
    &apos;WRITE&apos;: &apos;CreateDataIdentifier&apos;
  },
  &quot;updatedataidentifier&quot;: {
    &apos;UPDATE&apos;: &apos;UpdateDataIdentifier&apos;
  },
  &quot;getdataidentifier&quot;: {
    &apos;READ&apos;: &apos;GetDataIdentifier&apos;
  },
  &quot;getunusedcampaigns&quot;: {
    &apos;READ&apos;: &apos;GetUnusedCampaigns&apos;
  },
  &quot;createmsgrule&quot;: {
    &apos;WRITE&apos;: &apos;CreateMsgRule&apos;
  },
  &quot;updatemsgrule&quot;: {
    &apos;UPDATE&apos;: &apos;UpdateMsgRule&apos;
  },
  &quot;getmsgrule&quot;: {
    &apos;READ&apos;: &apos;GetMsgRule&apos;
  }
}

// Save the whole map into channel map. It&apos;ll get checked in the later destination.
channelMap.put(&apos;endpoint_action_map&apos;, endpoint_action_map);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>false</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>95</metaDataId>
      <name>READ-agenta-sso-healthcheck</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>56306ffb-de0c-4319-ae00-eb34b2fd33fe</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>stringify</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>set logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>1</metaDataId>
      <name>READ-agenta-sso-domainvalues</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>d27165db-aef5-4115-bfe9-7b8ae2842664</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>stringify</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>set logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>13</metaDataId>
      <name>WRITE-agenta-sso-createcampaignucce</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>7dee12a9-5aee-4410-a40f-a87c4d68e90a</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));
channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	logger.debug($(&apos;Channel Name&apos;) +&quot; consume response&quot;);
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 
	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>6</metaDataId>
      <name>WRITE-agenta-sso-createcampaignuccx</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>61bb3da2-0d14-41fb-a974-210d7e94aee3</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));
channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>39</metaDataId>
      <name>WRITE-agenta-sso-createcampaignemailsms</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>837c330b-0fb7-465f-a78a-88fce8b374ef</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 
	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>55</metaDataId>
      <name>READ-agenta-sso-getskillgrouplist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>52679564-5fd1-42db-b67f-cfc6757cb127</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>54</metaDataId>
      <name>READ-agenta-sso-getcampaignslist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>eb5d5a44-d24d-4d0c-805c-3eb4489292d4</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>17</metaDataId>
      <name>READ-agenta-sso-getcampaignsucce</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>88cce3b6-a700-4958-beac-fe41db8c52fb</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>18</metaDataId>
      <name>READ-agenta-sso-getcampaignsuccx</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>9f8a049a-bd80-424a-ac14-48d9e933422a</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>20</metaDataId>
      <name>READ-agenta-sso-getcampaignbyid</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>e946c7c9-cc5e-4c57-8569-e72aa538191d</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>25</metaDataId>
      <name>DELETE-agenta-sso-delcampaignbyid</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>24de69d2-c0c8-4434-8c33-13b9c7953002</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>35</metaDataId>
      <name>WRITE-agenta-sso-updatecampaignbyid</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>7621e22e-8578-4d03-97b9-38d2ecb14c5f</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>24</metaDataId>
      <name>WRITE-agenta-sso-timerpresets</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>20198149-3d2c-4d61-89ba-68d505f8ff6f</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>28</metaDataId>
      <name>WRITE-agenta-sso-updatetimerpresets</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>cc215407-1aa1-4f7f-b17a-60cded34455a</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>26</metaDataId>
      <name>READ-agenta-sso-gettimerpresetsbyid</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>9035989d-f9d8-4d16-b654-c03661c99fa3</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>27</metaDataId>
      <name>READ-agenta-sso-gettimerpresetsbylist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>3f38bd46-3ab6-4e46-abaa-7d3b378c96cd</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>29</metaDataId>
      <name>DELETE-agenta-sso-deltimerpresetsbyid</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>6344d16e-e2cb-47b5-8fde-8442a6ae1838</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>30</metaDataId>
      <name>WRITE-agenta-sso-practicetimer</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>36542ffd-a91e-48c1-9b9c-22e0aa29136d</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>31</metaDataId>
      <name>WRITE-agenta-sso-updatepracticetimer</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>b078b4ad-6833-489a-800f-16eb16bb5f36</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>32</metaDataId>
      <name>READ-agenta-sso-getpracticetimerbylist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>33e3d29b-5b43-4f5d-918f-4cb55a60ed7e</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>33</metaDataId>
      <name>READ-agenta-sso-getpracticetimerbyid</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>243cf548-9b0a-44f9-87e2-4b0f7a14eab3</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>34</metaDataId>
      <name>DELETE-agenta-sso-delpracticetimerbyid</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>92800dd7-cc61-43ba-abc4-659eee1ddaea</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>46</metaDataId>
      <name>WRITE-agenta-sso-importcontactuccx</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>32d54449-5b54-4562-85ef-7094b8802c04</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>47</metaDataId>
      <name>WRITE-agenta-sso-notificationlist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>d48873f6-c3ea-46a8-91da-70040b9f84d5</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>52</metaDataId>
      <name>WRITE-agenta-sso-updatenotificationlist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>e94d93bd-745b-434f-941b-59938e7aa32d</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>48</metaDataId>
      <name>READ-agenta-sso-getnotificationlist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>982b2314-d2d6-46c2-b4ea-0b56490affda</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>53</metaDataId>
      <name>READ-agenta-sso-notificationlist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>a56fadde-0c55-4fc5-915e-b91a997f6acd</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>49</metaDataId>
      <name>DELETE-agenta-sso-notificationlist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>bffbdae8-2e1d-40f2-b1e7-231cf52d477b</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>51</metaDataId>
      <name>WRITE-agenta-sso-campaignstatus</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>04e4ca4b-12ba-46cd-bafe-2768f0f21737</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>58</metaDataId>
      <name>READ-agenta-sso-schedulevariablelist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>17fcc0b4-5d15-4e1f-95d3-beee2bbb9f70</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>59</metaDataId>
      <name>WRITE-agenta-sso-createmessagetemplate</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>7ffebed3-0ac8-4c5e-86cb-cb6be64f76d3</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>66</metaDataId>
      <name>WRITE-agenta-sso-updatesmstemplates</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>cf030cd2-5155-4d61-bc33-43e1c8fc5370</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>65</metaDataId>
      <name>DELETE-agenta-sso-deletesmstemplates</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>e13a57cd-1c09-4c65-b585-0043b8e9e64e</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>60</metaDataId>
      <name>WRITE-agenta-sso-mediatemplate</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>600c3168-5180-4b1a-8e7e-0e219ef065fd</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>61</metaDataId>
      <name>WRITE-agenta-sso-updatemediatemplate</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>e9adcf31-177b-4768-9e15-d2f347ad6bef</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>62</metaDataId>
      <name>READ-agenta-sso-mediatemplate</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>b06473b4-fad5-4d8f-a02f-caa203d9e001</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>63</metaDataId>
      <name>DELETE-agenta-sso-mediatemplate</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>66895766-dd5a-410f-908c-eb48705de5f7</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>68</metaDataId>
      <name>READ-agenta-sso-getmediatemplate</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>abe100d9-36f8-4595-bc93-dbd4be6e084e</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>69</metaDataId>
      <name>READ-agenta-sso-getmediatemplatebycode</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>0bd9ea84-4d90-4f9c-b1ff-e0497cbaae3f</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>73</metaDataId>
      <name>READ-agenta-sso-getmediatemplatebytypeandid</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>6875855f-8529-4f30-9171-e16e67d0dcc3</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>94</metaDataId>
      <name>READ-agenta-sso-getmediatemplatebyidtypecode</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>ffface50-22a6-407c-9697-3bcb70a7b3bc</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	channelMap.put( &apos;ResponseFromDownstreamChannel&apos;, msg );
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	channelMap.put( &apos;ResponseFromDownstreamParsed&apos;, result );
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>74</metaDataId>
      <name>WRITE-agenta-sso-updatemediatemplatemsgbyid</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>7a46dfe3-6136-4a7e-96b8-d0ce28bc9fba</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>70</metaDataId>
      <name>READ-agenta-sso-messagetypes</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>6c831f29-7b37-4e93-9298-03ee35f35a6c</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>67</metaDataId>
      <name>READ-agenta-sso-smsdefaults</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>13f96187-5d02-4e0e-9928-88d12eb28970</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>71</metaDataId>
      <name>WRITE-agenta-sso-uploadaudio</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>432f80d3-4604-4cc9-8f0b-b3a2c4850fca</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>72</metaDataId>
      <name>READ-agenta-sso-audiofileslist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>81a1300a-1693-4cfd-9af4-81236e56fdad</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>75</metaDataId>
      <name>READ-agenta-sso-getvoicetemplate</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>9b62d076-7796-4218-976f-9e116cebfb42</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>76</metaDataId>
      <name>WRITE-agenta-sso-globalsettings</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>b5badeb9-37fb-4067-a7af-0330a8dcfa8a</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>79</metaDataId>
      <name>READ-agenta-sso-globalsettings</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>b7a053d9-6f8b-44ca-a6e4-2dff67fdb5be</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>80</metaDataId>
      <name>WRITE-agenta-sso-clonecampaign</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>7541be74-5f8f-40d5-9226-4c47d7378998</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>81</metaDataId>
      <name>WRITE-agenta-sso-clonenotificationlist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>9e9b0bd3-01fe-4912-8432-c58712d646d7</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>82</metaDataId>
      <name>READ-agenta-sso-gethl7data</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>485a6931-1f36-42ef-b58f-4c6398f4c701</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>83</metaDataId>
      <name>WRITE-agenta-sso-createdatasourcerules</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>0a2e0afd-0238-4a3c-a46b-0cfa553e00b7</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>84</metaDataId>
      <name>WRITE-agenta-sso-updatedatasourcerules</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>35cca48e-cb79-485c-a2b1-ec6cb54996a3</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>85</metaDataId>
      <name>READ-agenta-sso-getdatasourcerules</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>3b2ea6b7-fc6c-4ed7-9c92-ac1c6b7409e6</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>86</metaDataId>
      <name>WRITE-agenta-sso-createdataidentifier</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>8cabd547-548d-406e-8b3a-cf4804abbc0e</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>87</metaDataId>
      <name>WRITE-agenta-sso-updatedataidentifier</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>a235de59-c64c-4ac6-a8f4-2e170df94d8f</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>88</metaDataId>
      <name>READ-agenta-sso-getdataidentifier</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>4f0991fd-7c0b-47ba-8f37-1e38a4d2719f</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>89</metaDataId>
      <name>READ-agenta-sso-getunusedcampaigns</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>69d72a59-31a8-412c-b103-c22e5921eb40</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>90</metaDataId>
      <name>WRITE-agenta-sso-clonemediatemplate</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>26b3a3eb-4583-4cde-8e7a-ccdc50d74db0</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>91</metaDataId>
      <name>WRITE-agenta-sso-createmsgrule</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>7d0fce6b-bbe6-4e03-99ca-51b63ebd0c50</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>92</metaDataId>
      <name>WRITE-agenta-sso-updatemsgrule</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>4c129a2a-aaac-4a8a-b8fe-a826e781d017</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>93</metaDataId>
      <name>READ-agenta-sso-getmsgrule</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>0f77c05b-d42d-4430-b54a-d40109a25f8a</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>96</metaDataId>
      <name>WRITE-agenta-sso-errorlog</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>9e116d70-08e7-4e17-982c-742da302a685</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>97</metaDataId>
      <name>READ-agenta-sso-getsnmpstats</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>ef8d31b6-5286-467e-94d3-6b8dc0498c3f</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>98</metaDataId>
      <name>READ-agenta-sso-erroremails</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>f6d539df-1b84-46b7-ad0d-ff08fa15b5ed</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>99</metaDataId>
      <name>WRITE-agenta-sso-createtemplatelist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>fb5ef59b-9693-48c7-b788-17cc7c752026</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>100</metaDataId>
      <name>WRITE-agenta-sso-updatetemplatelist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>c93e95a7-08b0-4095-b148-cdab37bbe644</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>101</metaDataId>
      <name>READ-agenta-sso-gettemplatelist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>07e5a991-6de4-4c19-ad3d-f0f0bfb43647</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>102</metaDataId>
      <name>READ-agenta-sso-get_dataidentifier_data</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>674f5cc4-2b7c-4e66-b898-a5fbfa3b32ce</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>103</metaDataId>
      <name>WRITE-agenta-sso-createvoicemessage</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>0d657d43-37f6-41ce-be86-06f5f54dea1a</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>104</metaDataId>
      <name>READ-agenta-sso-getvoicemessage</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>691549f9-dae3-4265-97e0-ad032a834c52</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>105</metaDataId>
      <name>WRITE-agenta-sso-createvoiceresponse</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>e6da6896-90e2-4c7b-9a05-f83afc761cf3</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>114</metaDataId>
      <name>WRITE-agenta-sso-createvoiceresponsefh</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>85174112-d511-468e-b483-046ade28c843</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>106</metaDataId>
      <name>WRITE-agenta-sso-createdpvcontrols</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>6f8768dc-c7d4-4529-87e4-29329d447a2a</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>108</metaDataId>
      <name>READ-agenta-sso-getdpvcontrols</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>3c90b556-4d8a-40d9-baea-012eea404214</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>109</metaDataId>
      <name>READ-agenta-sso-searchdpvcontrols</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>3b209ae6-af13-4495-adff-a3f53f14957d</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>107</metaDataId>
      <name>WRITE-agenta-sso-updatedpvcontrols</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>57ba878b-943a-476f-8be5-a0828b1ac683</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>111</metaDataId>
      <name>WRITE-agenta-sso-updatecustomerdata</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>bcc32dde-9b2e-4f5d-b82a-8dac33398ce8</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body variable </name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>112</metaDataId>
      <name>WRITE-agenta-sso-addcustomerdata</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>0e68dd99-059c-4c31-b411-0aaafe3a2aef</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body Variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>113</metaDataId>
      <name>READ-agenta-sso-getvoicemessagefh</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>cd4a025f-b625-4a29-8a67-c2a4efd70f03</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging variable body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>110</metaDataId>
      <name>READ-agenta-sso-getcustomerdata</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>80aadbbd-f18b-44c6-b0a8-4bf024945530</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>115</metaDataId>
      <name>WRITE-agenta-sso-createmediamessagefh</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>fc36463b-051f-4ef2-b226-049a61d96161</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body Variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>116</metaDataId>
      <name>WRITE-agenta-sso-updatemediamessagefh</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>e63985fd-05f7-4238-9fb7-bf72737bfda8</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body variable </name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>118</metaDataId>
      <name>READ-agenta-sso-getsmsmessagetemplatefh</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>4effcba8-3998-4188-a40d-0f41a1d8378c</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body </name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>120</metaDataId>
      <name>READ-agenta-sso-sendemailforauth</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>d9b37771-f406-44f9-ba23-e052544ad444</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid Logging</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>121</metaDataId>
      <name>WRITE-agenta-sso-checklogincredentials</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>248cebea-77d2-45f8-88f1-d42c581cfbac</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>123</metaDataId>
      <name>WRITE-agenta-sso-registeruser</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>4e488381-37e9-4ab4-b4a9-5e41d2f5c628</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid Logging</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>124</metaDataId>
      <name>READ-agenta-sso-getuserlist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>625ae7bf-b77e-4a7e-afd1-22f2dbca5e4e</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid body variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>127</metaDataId>
      <name>WRITE-agenta-sso-updateuserrole</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>81fd7e88-afc0-4f00-803b-f781bc40ca8e</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>126</metaDataId>
      <name>READ-agenta-sso-resendverification</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>8bcf451a-3d8d-4873-9a6d-b4930c5a3244</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>125</metaDataId>
      <name>READ-agenta-sso-verificationtoken</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>54d2198e-b8e5-44c5-aec5-a4bb7f2c0a3b</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Responses</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	channelMap.put( &apos;ResponseFromDownstreamChannel&apos;, msg );
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	channelMap.put( &apos;ResponseFromDownstreamParsed&apos;, result );
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid Logging body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>119</metaDataId>
      <name>WRITE-agenta-sso-createmediamessagetemplatefh</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>2d499eb2-332f-4903-b2ae-c79465d1863d</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name> consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>117</metaDataId>
      <name>READ-agenta-sso-getmediamessagefh</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>cd506de1-c120-4d17-9ad2-55e378ed73bd</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>130</metaDataId>
      <name>READ-agenta-sso-getvoicemessagetemplatesfh</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>a85ad3ef-3889-49ce-b5ff-a808955b1e36</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid Logging body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>133</metaDataId>
      <name>READ-agenta-sso-getvoicemediamessagefh</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>3f0d49e7-3396-4dc1-b55a-2ec72a7a9d00</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid Logging Body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>131</metaDataId>
      <name>WRITE-agenta-sso-updatevoicemediamessagefh</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>e2486421-a362-4d04-86ab-666c95de22f8</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid Logging Body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>132</metaDataId>
      <name>WRITE-agenta-sso-createvoicemediamessagefh</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>cf977722-d7bc-4ff6-a11b-43241c84bede</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid Logging Body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>134</metaDataId>
      <name>READ-agenta-sso-getvariablesmedia</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>c696cedc-7c8a-4479-a465-742c872f00de</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>128</metaDataId>
      <name>READ-agenta-sso-forgotpassword</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>8aae209b-5fe4-4aa7-82b9-eab172f45ce5</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>135</metaDataId>
      <name>READ-agenta-sso-getcontacts</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>1359cec7-5aa9-403d-894c-b2f22caf6b1d</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));
channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	logger.debug($(&apos;Channel Name&apos;) +&quot; consume response&quot;);
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 
	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>136</metaDataId>
      <name>WRITE-agenta-sso-exclusionlist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>e81901ad-c76d-4921-a8df-3274c0cb0f46</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>129</metaDataId>
      <name>WRITE-agenta-sso-resetpassword</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>7547c433-bdc6-4fc3-bea8-fa8687d6744c</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>137</metaDataId>
      <name>WRITE-agenta-sso-fileconfiguration</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>33bfd684-1a0a-462c-bf58-fd57cef1e7c8</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	logger.debug(&quot;response from file config&quot;+msg)
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>139</metaDataId>
      <name>WRITE-agenta-sso-createcampaignuccxahs</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>1ed020f7-bdae-4af9-933d-ca3e57bbd270</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume resopnse</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid body logging</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>138</metaDataId>
      <name>READ-agenta-sso-getdatailfrommrn</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>a319a5c6-5c79-4b92-9b22-93579f3310ef</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>140</metaDataId>
      <name>READ-agenta-sso-getsftpdetails</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>17bfff8e-8d80-4d89-9c6b-b3cadccc7068</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>141</metaDataId>
      <name>WRITE-agenta-sso-createsftpdetails</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>dd97cc12-9fc9-4f12-bbac-dbf9be909eb8</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>142</metaDataId>
      <name>WRITE-agenta-sso-updatesftpdetails</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>2cd61bd2-4024-465a-a9c2-31693a7bb4b6</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>144</metaDataId>
      <name>READ-agenta-sso-callactivity</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>e93f4ac2-647f-4ed4-b70a-7eb26f2837aa</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>143</metaDataId>
      <name>READ-agenta-sso-getfileconfiguration</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>a88e8836-94c2-4380-ad5b-a2982eece0f8</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>147</metaDataId>
      <name>WRITE-agenta-sso-createcamapignuccxv2</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>1ed020f7-bdae-4af9-933d-ca3e57bbd270</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>block logging body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>146</metaDataId>
      <name>WRITE-agenta-sso-createcampaignucceahs</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>1ed020f7-bdae-4af9-933d-ca3e57bbd270</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume reponse</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>avoid body logging</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>150</metaDataId>
      <name>READ-agenta-sso-getskillgrouplistahs</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>86637ec3-6e63-4ac6-8de1-3e61938da34e</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume reponse</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>avoid body logging</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>154</metaDataId>
      <name>READ-agenta-sso-getvoicemaildata</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>5d65bc6c-262c-41a6-bfa6-1e3d5b8b5c65</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume reponse</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>avoid body logging</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>153</metaDataId>
      <name>READ-agenta-sso-getvoicetempdata</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>1c64b641-b54b-42e3-b1c1-b6f2e5433778</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume reponse</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>avoid body logging</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>158</metaDataId>
      <name>READ-agenta-sso-dialhistorylist</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>d876ee86-eae6-4a6a-8385-8773ebd6e9d8</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume reponse</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>avoid body logging</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>155</metaDataId>
      <name>READ-agenta-sso-getmsgcount</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>8bd229a5-ecaf-4055-bb7b-d46b624b6ae8</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume reponse</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>avoid body logging</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>159</metaDataId>
      <name>WRITE-agenta-sso-createcampaignuccev2</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>944b2d62-2cf5-49e9-a24f-31af60c3bb66</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));
channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	logger.debug($(&apos;Channel Name&apos;) +&quot; consume response&quot;);
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 
	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>145</metaDataId>
      <name>WRITE-agenta-sso-updateorderbyresponse</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>fb125b41-a1d0-42a6-8fe6-6556b93f3a2c</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>160</metaDataId>
      <name>WRITE-agenta-sso-createcampaignemailsmsv2</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>0e9eb850-4204-4ee2-aad6-849ff19c7fdf</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 
	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>162</metaDataId>
      <name>WRITE-agenta-sso-setadvancedrules</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>de6da6c0-ee1b-48da-bd23-e04e340d7144</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	logger.debug(&quot;response from file config&quot;+msg)
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>163</metaDataId>
      <name>READ-agenta-sso-getadvancedrules</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>2e516182-5dcb-48de-adfc-037dbfcb498a</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>consume response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>logging variable</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>164</metaDataId>
      <name>READ-agenta-sso-getdatailfrommrngadget</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>635df6ba-d194-4417-a3f0-bd9a836e5864</channelId>
        <channelTemplate>${write_string}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>const write_string = JSON.stringify($(&apos;channel_write_data&apos;));

channelMap.put(&apos;write_string&apos;, write_string);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Consume Response</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);
var result = {};

try 
{
	
	result = JSON.parse(msg);
	// merge the inner result with the one we&apos;re holding onto.
	Object.assign(out,  result.output); 
	Object.assign(meta, result.metadata); 

	channelMap.put(&apos;responseCode&apos;, meta.http_code);
}
catch (e)
{
	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION&apos;,
		&apos;JSON Parse Destination Results&apos;, 
		e
	);

	result = msg.toString();
	out.results.push(result);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <name>Avoid logging body</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>channelMap.put(&apos;avoid_logging_body&apos;, true);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>3</metaDataId>
      <name>RETURN_VALUE</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>// Set code to whatever the destination (or us) put into meta data, otherwise blat out server error code.
var meta = $(&apos;meta&apos;);
channelMap.put(&quot;responseCode&quot;, meta.http_code || &quot;500&quot;);
// write response headers
channelMap.put(&quot;responseHeaders&quot;, meta.headers || {});

var audit_log = meta.audit_log;

// Response content lives in the out object.
// Add in the audit trail for later debugging use.
var final_answer = $(&apos;out&apos;);
final_answer[&apos;audit_log&apos;] = audit_log;
logger.trace(&quot;[SSO_Router][RETURN_VALUE]final answer &quot; + JSON.stringify(final_answer));
// Checking for accept headers wanting us to return in xml.
var has_xml_substring = /xml/i ; // Regex value we can .test() with. /i flag lets us accept &apos;XML&apos; and &apos;xml&apos; the same way.
if (has_xml_substring.test($(&apos;accept&apos;)))
{
	channelMap.put(&quot;content_type&quot;, &quot;application/xml&quot;);
	return (&quot;&lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;&lt;response&gt;&quot;+OBJtoXML(final_answer)+&quot;&lt;/response&gt;&quot;);
}
else
{
	channelMap.put(&quot;content_type&quot;, &quot;application/json&quot;);
	return JSON.stringify(final_answer);
}

</script>
      </properties>
      <transformer version="3.8.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.8.1">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>process_audit_log();

function process_audit_log()
{
	// Set a default simple out for those records with nothing custom set.
	const out = $(&apos;out&apos;);
	const meta = $(&apos;meta&apos;);
	var simple_out_to_log = meta.audit_log.simple_out;
	if (simple_out_to_log == null) { 
		const simple_log = $(&apos;destination_command&apos;) + &apos; - success: &apos; + out.success; 
		meta.audit_log.simple_out = simple_log;
	}
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.8.1">
      <metaDataId>23</metaDataId>
      <name>LOG_REQUEST_OUT</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.8.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.8.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
            <entry>
              <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
              <string>decryption</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>var out = $(&apos;out&apos;);
var meta = $(&apos;meta&apos;);

var dbConn = null;
try 
{
	dbConn = getdbConnection();
	logger.debug(&apos;[LOG_REQUEST_OUT] dbconn &apos;+dbConn);
	var audit_log = performQuery(dbConn);
	logger.debug(&apos;[LOG_REQUEST_OUT] audit_log &apos;+JSON.stringify(audit_log));
	if (Array.isArray(audit_log)) { audit_log = audit_log[0]; }
	
	connectorMap.put(&apos;audit_log&apos;, audit_log);
}
catch (e)
{
	logger.error(channelName + &quot; endpoint LOG_REQUEST_OUT trapped exception: &quot; + e);

	connectorMap.put(&quot;trapped_exception&quot;, e);

	const complaint = PrepareError(
		&apos;TRAPPED_EXCEPTION_SQL&apos;,
		&apos;insert into audit_log&apos;, 
		e
	);

	out.error.push(complaint);
}
finally
{
	if (dbConn) { dbConn.close(); }
}

return JSON.stringify($(&apos;out&apos;)); // As string for logging

function performQuery(dbConn)
{
	const query = buildUpdateQuery();
	logger.debug(&apos;[LOG_REQUEST_OUT]query &apos;+buildUpdateQuery());
	const params = buildParameterArray();
	
	logger.debug(&apos;[LOG_REQUEST_OUT]params &apos;+params);
	// Log what we&apos;re sending in case we need to debug it later.
	connectorMap.put(&apos;sql_query&apos;, query);
	connectorMap.put(&apos;sql_params&apos;, params);

	const result = dbConn.executeCachedQuery(query, params);
	logger.debug(&apos;[LOG_REQUEST_OUT]result &apos;+result);
	const json_results = convertSqlResultSetToJson(result);
	logger.debug(&apos;[LOG_REQUEST_OUT]json_results &apos;+json_results);
	if( json_results.length === 0)
	{
		out.info = &quot;No Results Found&quot;;
	}

	return json_results;
}

function buildUpdateQuery()
{
	return &apos;UPDATE ONLY audit_trail.request_log SET &apos; +
		&apos;	raw_response = ? ,&apos; +
		&apos;	simple_response = ? ,&apos; +
		&apos;    http_code = ? ,&apos; +
		&apos;    errors = ? ,&apos; +
		&apos;	prune_date = to_timestamp(? / 1000.0) &apos; + // convert JS date integer (num millis) to postgres timestamp (num sec) ; https://stackoverflow.com/questions/42876071/how-to-save-js-date-now-in-postgresql
		&apos; WHERE audit_trail.request_log.uid = CAST(? as uuid) &apos; +
		&apos; RETURNING audit_trail.request_log.uid ;&apos;; // Return uid to make the query handler happy.
}

function buildParameterArray()
{
	// This function is going have to know about the innards of the query builder function,
	// at least in terms of knowing what to push and in what order.
	var params = [];
	logger.debug(&apos;destination cmd &apos;+$(&apos;destination_command&apos;));
	var prune_date_as_int = Number(decidePruneDate($(&apos;destination_command&apos;)));
	logger.debug(&apos;prune_date_as_int &apos;+prune_date_as_int);
	// If we allow the REQUEST_LOG channel to log it&apos;s output, repeated pulls will lead to geometric growth of the raw body.
	// We short circuit that by omitting the raw response for channels that request such by checking the channelMap flag below.
	var body_to_log;
	if ($(&apos;avoid_logging_body&apos;) == true ) { body_to_log = {&apos;omitted&apos;:true}; } // Log that we didn&apos;t log the body.
	else { body_to_log = out;} // Vast majority of channels will be logging their output.

	// The empty error array is &apos;translated&apos; to null for the DB sake.
	var error_to_log = null;
	if(out.error.length &gt; 0) { error_to_log = JSON.stringify(out.error); }
	logger.debug(&apos;body_to_log&apos; +JSON.stringify(body_to_log));
	logger.debug(&apos;meta.audit_log&apos; +meta.audit_log.simple_out);
	logger.debug(&apos;responseCode&apos; +$(&apos;responseCode&apos;));
	logger.debug(&apos;error_to_log&apos; +error_to_log);
	logger.debug(&apos;prune_date_as_int&apos; +prune_date_as_int);
	logger.debug(&apos;meta.audit_log.uid &apos; +meta.audit_log.uid);
	// SET clause marks
	params.push(JSON.stringify(body_to_log));
	params.push(meta.audit_log.simple_out.toString());
	params.push($(&apos;responseCode&apos;));
	params.push(error_to_log);
	params.push(prune_date_as_int);
	// WHERE clause marks
	params.push(meta.audit_log.uid); // The original audit log id that got created.
	return params;
}

function decidePruneDate(metadata_command)
{
	// Logging literally every call that comes in quickly generates lots of junk data, but we also have real stuff mixed in.
	// So need to prune out &apos;old&apos; records, where the definition of &apos;old&apos; varies by what the data actually is.

	// General plan follows:
	// - Healthchecks prune after one day
	// - Basic Reads prune after one week (enough time to debug in a day two sense)
	// - Basic Writes prune after two months
	// - Writes to AUTH tables prune after one year
	// - Writes to KNOWN tables prune after one year
	// - Unrecognized commands prune after one year (could have been a bugged AUTH write, maybe)

	var today = new Date(); // Today, be sure to edit this before we use it or the prune will eat it tonight.
	var prune_date;

	switch(&apos;&apos; + metadata_command) // using this trick to coerce any Java strings into JavaScript strings before use in switch compare statements.
	{
		// If we hit something that&apos;s not in the switches below, set to longest prune time and also warn.
		default:
			logger.warn(&apos;[SSO_ROUTER][LOG_REQUEST_OUT] Encountered default switch case in prune calculation for command:&apos; + metadata_command);
			prune_date = addDays(today, 365); // ignore leap years. I don&apos;t feel like dealing with those for a mere prune date.
			break;

		case &quot;READ-agenta-sso-getcampaignslist&quot;:
			prune_date = addDays(today, 1); // day
			break;

		case &quot;WRITE-agenta-sso-createcampaignucce&quot;:
		case &quot;WRITE-agenta-sso-createcampaignuccx&quot;:
		case &quot;WRITE-agenta-sso-createcampaignemailsms&quot;:
		case &quot;READ-agenta-sso-domainvalues&quot;:
		case &quot;READ-agenta-sso-getskillgrouplist&quot;:
		case &quot;READ-agenta-sso-getcampaignsucce&quot;:
		case &quot;READ-agenta-sso-getcampaignsuccx&quot;:
		case &quot;READ-agenta-sso-getcampaignbyid&quot;:
		case &quot;WRITE-agenta-sso-timerpresets&quot;:
		case &quot;WRITE-agenta-sso-updatetimerpresets&quot;:
		case &quot;READ-agenta-sso-gettimerpresetsbyid&quot;:
		case &quot;READ-agenta-sso-gettimerpresetsbylist&quot;:
		case &quot;WRITE-agenta-sso-practicetimer&quot;:
		case &quot;WRITE-agenta-sso-updatepracticetimer&quot;:
		case &quot;READ-agenta-sso-getpracticetimerbylist&quot;:
		case &quot;READ-agenta-sso-getpracticetimerbyid&quot;:
		case &quot;WRITE-agenta-sso-notificationlist&quot;:
		case &quot;WRITE-agenta-sso-updatenotificationlist&quot;:
		case &quot;READ-agenta-sso-getnotificationlist&quot;:
		case &quot;READ-agenta-sso-notificationlist&quot;:
		case &quot;DELETE-agenta-sso-notificationlist&quot;:
		case &quot;WRITE-agenta-sso-campaignstatus&quot;:
		case &quot;READ-agenta-sso-schedulevariablelist&quot;:
		case &quot;WRITE-agenta-sso-smstemplates&quot;:
		case &quot;WRITE-agenta-sso-updatesmstemplates&quot;:
		case &quot;WRITE-agenta-sso-mediatemplate&quot;:
		case &quot;WRITE-agenta-sso-updatemediatemplate&quot;:
		case &quot;READ-agenta-sso-mediatemplate&quot;:
		case &quot;READ-agenta-sso-getmediatemplate&quot;:
		case &quot;DELETE-agenta-sso-mediatemplate&quot;:
		case &quot;READ-agenta-sso-getmediatemplatebycode&quot;:
		case &quot;READ-agenta-sso-getmediatemplatebytypeandid&quot;:
		case &quot;WRITE-agenta-sso-updatemediatemplatemsgbyid&quot;:
		case &quot;READ-agenta-sso-messagetypes&quot;:
		case &quot;READ-agenta-sso-smsdefaults&quot;:
		case &quot;WRITE-agenta-sso-uploadaudio&quot;:
		case &quot;READ-agenta-sso-audiofilelist&quot;:
		case &quot;READ-agenta-sso-getvoicetemplate&quot;:
		case &quot;WRITE-agenta-sso-globalsettings&quot;:
		case &quot;READ-agenta-sso-globalsettings&quot;:
		case &quot;WRITE-agenta-sso-clonenotificationlist&quot;:
		case &quot;WRITE-agenta-sso-clonecampaign&quot;:
		case &quot;READ-agenta-sso-gethl7data&quot;:
		case &quot;WRITE-agenta-sso-createdatasourcerules&quot;:
		case &quot;WRITE-agenta-sso-updatedatasourcerules&quot;:
		case &quot;READ-agenta-sso-getdatasourcerules&quot;:
		case &quot;WRITE-agenta-sso-createdataidentifier&quot;:
		case &quot;WRITE-agenta-sso-updatedataidentifier&quot;:
		case &quot;READ-agenta-sso-getdataidentifier&quot;:
		case &quot;READ-agenta-sso-getunusedcampaigns&quot;:
		case &quot;WRITE-agenta-sso-clonemediatemplate&quot;:
		case &quot;WRITE-agenta-sso-createmsgrule&quot;:
		case &quot;WRITE-agenta-sso-updatemsgrule&quot;:
		case &quot;READ-agenta-sso-getmsgrule&quot;:
		case &quot;READ-agenta-sso-getmediatemplatebyidtypecode&quot;:
		
			prune_date = addDays(today, 7); // week
			break;

		
		case &quot;DELETE-agenta-sso-delpracticetimerbyid&quot;:
		case &quot;DELETE-agenta-sso-deltimerpresetsbyid&quot;:
		case &quot;WRITE-agenta-sso-updatecampaignbyid&quot;:
		case &quot;DELETE-agenta-sso-delcampaignbyid&quot;:
		case &quot;DELETE-agenta-sso-deletesmstemplates&quot;:
			prune_date = addDays(today, 60); // two months. Ignore February-related logic.
			break;

		// Writes to the &apos;known&apos; tables might need to be checked well after the fact, but also happen rarely.
		// Current logic doesn&apos;t have an actual year-long prune case, adding an example one to make the logic look right.
		case &quot;WRITE-agenta-sso-forgotpassword&quot;:
			prune_date = addDays(today, 365); // ignore leap years. I don&apos;t feel like dealing with those for a mere prune date.
			break;
	}

	connectorMap.put(&apos;prune_date&apos;, prune_date);

	return prune_date;
	
}

function addDays(date, days) 
{
	// https://stackoverflow.com/questions/563406/add-days-to-javascript-date/19691491#19691491
	var result = new Date(date);
	result.setDate(result.getDate() + days);
	return result;
}</script>
      </properties>
      <transformer version="3.8.1">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.8.1">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.8.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.8.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.8.1">
        <elements/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>false</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.8.1">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>PRODUCTION</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>true</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.8.1">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
      <entry>
        <string>63f12d9e-aff9-43ae-9350-f029f4c8c5c3</string>
        <string>decryption</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>true</enabled>
      <lastModified>
        <time>1602834062470</time>
        <timezone>UTC</timezone>
      </lastModified>
      <pruningSettings>
        <pruneMetaDataDays>45</pruneMetaDataDays>
        <archiveEnabled>false</archiveEnabled>
      </pruningSettings>
    </metadata>
    <channelTags>
      <channelTag>
        <id>6a75a868-5f87-44d2-aa2e-71f85fbf997f</id>
        <name>HTTP_Listener</name>
        <channelIds>
          <string>a69b2345-cc67-4c0a-b59b-a94a30fc6d18</string>
          <string>7d4bcab1-56e4-4c46-9b98-ad3cc8f34f3f</string>
          <string>683d2a62-e3b4-4719-8d63-abc1df60eb78</string>
          <string>106e1f73-5486-4092-a3b3-b8a59006b0ce</string>
          <string>56306ffb-de0c-4319-ae00-eb34b2fd33fe</string>
          <string>d02a46db-6d4e-4227-9883-deaa08cf0404</string>
          <string>c945b33b-35f2-432b-b140-5b96e4136607</string>
          <string>4911a5b5-5de5-4daf-a039-644b273c43cb</string>
          <string>4a824f95-27a5-42ae-9681-96af318709a6</string>
          <string>a5987106-c0e7-4591-a8dc-b98a8dbfb627</string>
          <string>86101144-4a96-4ed3-909f-98ee3efc25d6</string>
        </channelIds>
        <backgroundColor>
          <red>255</red>
          <green>0</green>
          <blue>0</blue>
          <alpha>255</alpha>
        </backgroundColor>
      </channelTag>
      <channelTag>
        <id>711c9009-85b5-481b-95cd-007ec92a2f64</id>
        <name>SSO_Router</name>
        <channelIds>
          <string>c945b33b-35f2-432b-b140-5b96e4136607</string>
        </channelIds>
        <backgroundColor>
          <red>255</red>
          <green>0</green>
          <blue>0</blue>
          <alpha>255</alpha>
        </backgroundColor>
      </channelTag>
    </channelTags>
  </exportData>
</channel>